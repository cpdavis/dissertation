#!/usr/bin/env python
# Script function: takes the condition-specific timing files generated by optimize
# and puts them into a single document, good for experimental presentation software

# USED FOR CARAT -- SPONT
import numpy as np
import sys
import pandas as pd
import argparse
import subprocess
import re

# create function that reshapes the timing files
def timing_type65(data, num):
	df=pd.read_table(data, sep=' ', header=None)
	df=df.transpose()
	df=df.drop(65)
	df=df.rename(index=str, columns={0:"Onset Time"})
	df['Type']=num
	return df;
	
def timing_type10(data, num):
	df=pd.read_table(data, sep=' ', header=None)
	df=df.transpose()
	df=df.drop(10)
	df=df.rename(index=str, columns={0:"Onset Time"})
	df['Type']=num
	return df;


# load and reshape the timing files
t="./Target.1D"
T = timing_type65(t,1)

d="./Distractor.1D"
D = timing_type65(d,2)

c="./Catch.1D"
C=timing_type10(c,3)

# put all reshaped timing files together
times = [T, D, C]
result = pd.concat(times)
result = result.sort_values(by=['Onset Time'])
result = result.reset_index()
result = result.drop('index', axis=1)

# add a column with trial type names
trialtypes = {1: "Target", 2: "Distractor", 3: "Catch"}
result['TrialType'] = result['Type'].map(trialtypes)

# write to csv
result.to_csv('catlearning_timings.csv', index=False, sep=',')
